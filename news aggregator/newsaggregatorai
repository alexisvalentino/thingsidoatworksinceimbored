import requests
import os
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from transformers import pipeline
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

# Constants
NEWS_API_KEY = os.getenv("NEWS_API_KEY")
EMAIL_ADDRESS = os.getenv("EMAIL_ADDRESS")
EMAIL_PASSWORD = os.getenv("EMAIL_PASSWORD")

# Fetch news articles
def fetch_news(interests):
    url = "https://newsapi.org/v2/everything"
    params = {
        "q": interests,
        "apiKey": NEWS_API_KEY,
        "pageSize": 10,
        "sortBy": "publishedAt",
    }
    response = requests.get(url, params=params)
    if response.status_code == 200:
        return response.json()["articles"]
    else:
        print(f"Error fetching news: {response.status_code}")
        return []

# Summarize articles
summarizer = pipeline("summarization")
def summarize_article(text, max_length=130, min_length=30):
    if len(text.split()) > 50:
        summary = summarizer(text, max_length=max_length, min_length=min_length, do_sample=False)
        return summary[0]["summary_text"]
    return text

# Analyze sentiment
sentiment_analyzer = pipeline("sentiment-analysis")
def analyze_sentiment(text):
    result = sentiment_analyzer(text)
    return result[0]["label"], result[0]["score"]

# Generate email content
def generate_email_content(articles):
    email_content = "<h1>Your Daily News Digest</h1>"
    for article in articles:
        email_content += f"""
        <h2>{article['title']}</h2>
        <p><b>Summary:</b> {article['summary']}</p>
        <p><b>Sentiment:</b> {article['sentiment']} (Score: {article['sentiment_score']:.2f})</p>
        <p><a href="{article['url']}">Read more</a></p>
        <hr>
        """
    return email_content

# Send email
def send_email(subject, body, to_email):
    msg = MIMEMultipart()
    msg['From'] = EMAIL_ADDRESS
    msg['To'] = to_email
    msg['Subject'] = subject
    msg.attach(MIMEText(body, 'html'))

    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.starttls()
    server.login(EMAIL_ADDRESS, EMAIL_PASSWORD)
    server.sendmail(EMAIL_ADDRESS, to_email, msg.as_string())
    server.quit()

# Main function
def main():
    interests = "technology"  # User-defined interests
    articles = fetch_news(interests)
    
    for article in articles:
        article["summary"] = summarize_article(article["content"])
        sentiment, score = analyze_sentiment(article["content"])
        article["sentiment"] = sentiment
        article["sentiment_score"] = score
    
    email_content = generate_email_content(articles)
    send_email("Your Daily News Digest", email_content, "your_email@example.com")

if __name__ == "__main__":
    main()